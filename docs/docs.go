// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Boris Br√∂nner",
            "url": "https://hintergarten.de",
            "email": "broenner@hintergarten.de"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health/live": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Retrieve live health status of server",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/health/ready": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Retrieve ready health status of server",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/media": {
            "get": {
                "description": "query media items based on some parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Query media items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tag ID to search for",
                        "name": "tag_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ahmodel.GetMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new media with a list of tags and a name",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Create media",
                "parameters": [
                    {
                        "description": "media to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ahttp.postMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ahmodel.PostMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "retrieve all tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "List tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ahmodel.Tag"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a new tag with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create tag",
                "parameters": [
                    {
                        "description": "tag to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ahmodel.PostTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ahmodel.PostTagsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ahmodel.GetMediaResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ahmodel.MediaItem"
                    }
                }
            }
        },
        "ahmodel.MediaItem": {
            "type": "object",
            "properties": {
                "file_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ahmodel.PostMediaResponse": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "string"
                }
            }
        },
        "ahmodel.PostTagsRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "ahmodel.PostTagsResponse": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "string"
                }
            }
        },
        "ahmodel.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ahttp.postMediaRequest": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "File binary blob",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "media-nexus API",
	Description:      "API to serve media assets",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
